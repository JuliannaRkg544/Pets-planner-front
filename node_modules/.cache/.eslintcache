[{"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/index.js":"1","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/App.js":"2","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Main.js":"3","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Login.js":"4","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/HealthCard.js":"5","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Logup.js":"6","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/SignupPet.js":"7","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ToDoList.js":"8","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/PetInfo.js":"9","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/Context/UserContext.js":"10","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalDelete.js":"11","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Footer.js":"12","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalTask.js":"13","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Header.js":"14","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalDate.js":"15","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/SubmmitButton.js":"16","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/Inputs.js":"17","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/Container.js":"18","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/ToDoListStyle.js":"19","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/ModalStyle.js":"20","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Loading.js":"21"},{"size":216,"mtime":1665235803125,"results":"22","hashOfConfig":"23"},{"size":1070,"mtime":1665369684674,"results":"24","hashOfConfig":"23"},{"size":3292,"mtime":1665496849282,"results":"25","hashOfConfig":"23"},{"size":1886,"mtime":1665529081286,"results":"26","hashOfConfig":"23"},{"size":168,"mtime":1665235803125,"results":"27","hashOfConfig":"23"},{"size":2206,"mtime":1665529085186,"results":"28","hashOfConfig":"23"},{"size":3878,"mtime":1665601188559,"results":"29","hashOfConfig":"23"},{"size":5024,"mtime":1665527480220,"results":"30","hashOfConfig":"23"},{"size":11924,"mtime":1665497767304,"results":"31","hashOfConfig":"23"},{"size":106,"mtime":1665235803125,"results":"32","hashOfConfig":"23"},{"size":1322,"mtime":1665329439952,"results":"33","hashOfConfig":"23"},{"size":1130,"mtime":1665601308797,"results":"34","hashOfConfig":"23"},{"size":1480,"mtime":1665368401728,"results":"35","hashOfConfig":"23"},{"size":1076,"mtime":1665528522896,"results":"36","hashOfConfig":"23"},{"size":1618,"mtime":1665525825491,"results":"37","hashOfConfig":"23"},{"size":526,"mtime":1665526669820,"results":"38","hashOfConfig":"23"},{"size":775,"mtime":1665235803129,"results":"39","hashOfConfig":"23"},{"size":2061,"mtime":1665492352774,"results":"40","hashOfConfig":"23"},{"size":899,"mtime":1665513626458,"results":"41","hashOfConfig":"23"},{"size":1809,"mtime":1665235803129,"results":"42","hashOfConfig":"23"},{"size":433,"mtime":1665529124418,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"18shs1p",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"47"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"47"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"47"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/index.js",[],[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/App.js",["114"],[],"import { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Main from \"./Main\";\nimport Login from \"./Login\";\nimport Logup from \"./Logup\";\nimport ToDoList from \"./ToDoList\";\nimport HealthCard from \"./HealthCard\";\nimport SignupPet from \"./SignupPet\";\nimport PetInfo from \"./PetInfo\";\nimport { useContext, useState } from \"react\";\nimport UserContext from \"../Context/UserContext\";\n \nfunction App() {\n  const [user, setUser] = useState(\"\");\n  return (\n    <UserContext.Provider value={{ user, setUser }} >\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Login />} />\n          <Route path=\"/pets\" element={<Main />} />\n          <Route path=\"/logup\" element={<Logup />} />\n          <Route path=\"/to-do-list\" element={<ToDoList />} />\n          <Route path=\"/health-card\" element={<HealthCard />} />\n          <Route path=\"/signup-pet\" element={<SignupPet />} />\n          <Route path=\"/pet/get/:idNature/:idPet\" element={<PetInfo />} />\n        </Routes>\n      </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Main.js",["115"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport { Link } from \"react-router-dom\";\nimport ModalDelete from \"./ModalDelete\";\n\nexport default function Main() {\n  const [del, setDel] = useState(false);\n  const [petArr, setPetArr] = useState([]);\n  const [idPet, setIdpet] = useState();\n  const URL_DELETE_PET = `${process.env.REACT_APP_API_URL}/pet/delete/${idPet}`;\n  const token = localStorage.getItem(\"token\")\n  let nature = \"\";\n  const URL_GET = `${process.env.REACT_APP_API_URL}/pet/get`\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  \n  useEffect(() => {\n    axios\n      .get(URL_GET,config)\n      .then((response) => {\n        const { data } = response;\n        console.log(data);\n        setPetArr(data);\n      })\n      .catch((err) => console.log(err.response));\n  }, [del]);\n\n  if (petArr.length > 0) {\n    \n    return (\n      <Style>\n        <Header />\n        <p> {dayjs().locale(\"PT-BR\").format(\"dddd, DD/MM\")} </p>\n        {petArr.map((pet) => {\n          if (pet.isCat) {\n            nature = \"cat\";\n          } else nature = \"dog\";\n          return (\n            <PetStyle key={pet.id} >\n              <Link to={`/pet/get/${nature}/${pet.id}`}> {pet.name} </Link>\n              <span\n                onClick={() => {\n                  setIdpet(pet.id);\n                  setDel(!del);\n                }}\n              >\n                <ion-icon name=\"trash-outline\"></ion-icon>\n              </span>\n            </PetStyle>\n          );\n        })}\n        <ModalDelete\n          toggleModal={del}\n          setToggleModal={setDel}\n          id={idPet}\n          URL={URL_DELETE_PET}\n        />\n        <Link className=\"main\" to={\"/signup-pet\"}>\n          {\" \"}\n          <button>New Baby</button>\n        </Link>\n        <Footer />\n      </Style>\n    );\n  } else\n    return (\n      <Style>\n        <Header/> \n        <p>Cadastre seu pet!</p>\n        <Link className=\"main\" to={\"/signup-pet\"}>\n          {\" \"}\n          <button>New Baby</button>\n        </Link>\n        <Footer/>\n      </Style>\n    );\n}\n\nconst Style = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 15% 20%;\n  align-items: center;\n  justify-content: center;\n  margin-top: 80px;\n  button {\n    width: 303px;\n    height: 45px;\n    margin: 10px 0;\n    color: #000;\n    font-size: 21px;\n    border-radius: 4.64px;\n    border: 1px #aaa;\n    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\n    background-color: var(--darkcolor);\n    margin-bottom: 25px;\n    font-weight: 700;\n  }\n  button:hover {\n    cursor: pointer;\n    filter: brightness(1.2);\n  }\n`;\n\nconst PetStyle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px;\n  width: 100%;\n  height: 45px;\n  margin: 20px 0;\n  color: #000;\n  font-size: 18px;\n  border: 1px solid #aaa;\n  box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\n  border-radius: 4.64px;\n  background-color: #fff;\n  a {\n    text-decoration: none;\n    width: fit-content;\n    color: #000;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  span {\n    cursor: pointer;\n  }\n`;\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Login.js",["116","117"],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/HealthCard.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Logup.js",["118"],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/SignupPet.js",["119","120","121","122"],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ToDoList.js",["123","124","125","126"],[],"import axios from \"axios\";\nimport { useEffect, useState, useContext } from \"react\";\nimport Button from \"../styledComponents/SubmmitButton\";\nimport ToDoListStyle from \"../styledComponents/ToDoListStyle\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport UserContext from \"../Context/UserContext\";\nimport dayjs from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\nimport ModalTask from \"./ModalTask\";\nimport ModalDelete from \"./ModalDelete\";\n\nexport default function ToDoList() {\n  const [toggleModal, setToggleModal] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [del, setDel] = useState(false);\n  const [idTask, setIdtask] = useState();\n  const { user, setUSer } = useContext(UserContext);\n  const [marked, setMarked] = useState(false);\n  const [filled,setFilled] = useState(\"-outline\")\n\n  const token = localStorage.getItem(\"token\");\n  const URL_DELETE_TASK = `${process.env.REACT_APP_API_URL}/pet/task/delete/${idTask}`;\n  const URL = `${process.env.REACT_APP_API_URL}/pet/task`;\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n\n  useEffect(() => {\n    axios\n      .get(URL, config)\n      .then((response) => {\n        console.log(response.data);\n        setTasks(response.data);\n      })\n      .catch((e) => {\n        console.log(e.response);\n      });\n  }, [toggleModal, del, marked]);\n\n  function riskTask(index, taskid) {\n    const URL_PATCH = `${process.env.REACT_APP_API_URL}/pet/task/patch/${taskid}`;\n    const body = {\n      isDone: tasks[index].done,\n    };\n    console.log(body);\n\n    axios\n      .patch(URL_PATCH, body, config)\n      .then((response) => {\n        console.log(response.data);\n        setMarked(!marked);\n      })\n      .catch((e) => console.log(e.response));\n  }\n\n  if (tasks.length > 0) {\n    return (\n      <>\n        <Header />\n        <ToDoListStyle>\n          <h1> {dayjs().locale(\"PT-BR\").format(\"dddd, DD/MM\")} </h1>\n          {tasks.map((task, index) => {\n            return !task.done ? (\n              <div className=\"single-task\">\n                  <p onClick={() => riskTask(index, task.id)}>\n                  {task.description}\n                  </p>\n                 \n               <div className=\"buttons\">\n               <span  className=\"mark-underline\" \n                  onClick={() => {\n                    riskTask(index, task.id);\n                   \n                  }}\n                 \n                >\n                  <ion-icon name={`checkbox${filled}`}></ion-icon>\n                </span>\n                <span className=\"delete\"\n                  onClick={() => {\n                    setDel(!del);\n                    setIdtask(task.id);\n                    console.log(\"id do list \", task.id);\n                  }}\n                >\n                  <ion-icon name=\"trash-outline\"></ion-icon>\n                </span>\n               </div>\n               \n\n                <ModalDelete\n                  toggleModal={del}\n                  setToggleModal={setDel}\n                  id={idTask}\n                  URL={URL_DELETE_TASK}\n                />\n              </div>\n            ) : (\n              <div className=\"single-task\">\n                <p className={filled} onClick={() => riskTask(index, task.id)}>\n                  {\" \"}\n                  {task.description}{\" \"}\n                </p>\n                <div className=\"buttons\">\n                <span  \n                  onClick={() => {\n                    riskTask(index, task.id);\n                  }}\n                 \n                >\n                  <ion-icon name={`checkbox${filled}`}></ion-icon>\n                </span>\n                <span\n                  onClick={() => {\n                    setDel(!del);\n                    setIdtask(task.id);\n                  }}\n                >\n                  <ion-icon name=\"trash-outline\"></ion-icon>\n                </span>\n\n                </div>\n                <ModalDelete\n                  toggleModal={del}\n                  setToggleModal={setDel}\n                  id={idTask}\n                  URL={URL_DELETE_TASK}\n                />\n              </div>\n            );\n          })}\n          <Button>\n            <span\n              onClick={() => {\n                setToggleModal(!toggleModal);\n              }}\n            >\n              {\" \"}\n              Add task\n            </span>\n          </Button>\n          <ModalTask\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n          />\n        </ToDoListStyle>\n        <Footer />\n      </>\n    );\n  } else\n    return (\n      <>\n        <Header />\n        <ToDoListStyle>\n          <h1> {dayjs().locale(\"PT-BR\").format(\"dddd, DD/MM\")} </h1>\n          <Button>\n            {\" \"}\n            <span onClick={() => setToggleModal(!toggleModal)}> Add task</span>\n          </Button>\n          <ModalTask\n            toggleModal={toggleModal}\n            setToggleModal={setToggleModal}\n          />\n        </ToDoListStyle>\n        <Footer />\n      </>\n    );\n}\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/PetInfo.js",["127","128","129","130","131"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport styled from \"styled-components\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport ModalDate from \"./ModalDate\";\nimport logoDog from \"../assets/imgs/dog-logo.png\";\nimport logoCat from \"../assets/imgs/cat-logo.png\";\n\nexport default function PetInfo() {\n  const [petInfo, setPetInfo] = useState([]);\n  const [modal, setModal] = useState(false);\n  const [vaccine, setVaccine] = useState(\"\");\n  const [disabledRadio, setDisabledRadio] = useState(false);\n  const token = localStorage.getItem(\"token\");\n  let nature = \"\"\n  \n  let petHealth = []\n  const { idPet } = useParams();\n  const { idNature } = useParams();\n\n  const URL = `${process.env.REACT_APP_API_URL}/pet/get/${idNature}/${idPet}`;\n  const URL_DATE = `${process.env.REACT_APP_API_URL}/pet/health-${idNature}/patch/${vaccine}/${idPet}`;\n  const URL_POST = `${process.env.REACT_APP_API_URL}/pet/health-${idNature}/post/${idPet}`\n\n  if( idNature===\"dog\") {nature = \"Dog\"} else {nature = \"Cat\"}\n  const config = {\n    headers: {\n        Authorization: `Bearer ${token}`,\n    },\n  }\n  useEffect(() => {\n    axios\n      .get(URL)\n      .then((response) => {\n        const { data } = response;\n        setPetInfo([data]);\n        \n      })\n      .catch((error) => {\n        console.log(error.response);\n      });\n  }, [disabledRadio]);\n\n  \n  \n  \n  if (petInfo.length > 0) {\n  \n    const petArr = petInfo[0];\n    console.log(\"pet info \", petInfo[0], \"nature \", nature)\n    const pet = petArr[0];\n    if( idNature===\"dog\") { petHealth = petInfo[0][0].Dog[0] } else {  petHealth = petInfo[0][0].Cat[0]}\n   \n    if(pet.isDog){\n      if (petInfo[0][0].Dog.length == 0){\n        axios.post(URL_POST,{},config).then(document.location.reload()).then(err=>console.log(err.response))\n      } \n    } else{\n      if (petInfo[0][0].Cat.length == 0){\n        axios.post(URL_POST,{},config).then(document.location.reload()).then(err=>console.log(err.response))\n    }}\n\n    return pet.isDog ?  (\n      \n      <>\n\n        <Header />\n        <Style>\n          <div className=\"top\">\n            <h1>{pet.name}</h1>\n            <div className=\"img-box\">\n              <img src={logoDog} />\n            </div>\n          </div>\n          <div className=\"pet-info\">\n            <p>Breed: {pet.breed}</p>\n            <p>Birthday: {pet.birthdate}</p>\n            <p>Genre: {pet.genre}</p>\n            <DogInfo>\n              {\" \"}\n              <div className=\"health-box\">\n                Vacinas:\n                <div className=\"health\">\n                  <p>V8/V10</p>\n                  <p>Data: {petHealth.V8_V10_date} </p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"V8-V10\");\n                    }}\n                  \n                    className={`radio-input `}\n                    style={\n                      petHealth.V8_V10\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n                <div className=\"health\">\n                  <p>Antirábica</p>\n                  <p>Data: {petHealth.antirabica_date} </p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"antirabica\");\n                    }}\n                   \n                    className={`radio-input `}\n                    style={\n                      petHealth.antirabica\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n                <div className=\"health\">\n                  <p>Gripe</p>\n                  <p>Data: {petHealth.gripe_date} </p>\n                  <button\n\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"gripe\");\n                    }}\n                    className={`radio-input `}\n                  \n                    style={\n                      petHealth.gripe\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n              </div>\n            \n              <div className=\"health-box\">\n                Vermífugo:\n                <div className=\"health\">\n                  <p>1° semestre</p>\n                  <p>{petHealth.verm1_date}</p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"verm1\");\n                    }}\n                    className={`radio-input `}\n                   \n                    style={\n                      petHealth.verm1\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                  <p>2° semestre</p>\n                  <p>{petHealth.verm2_date}</p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"verm2\");\n                    }}\n                    className={`radio-input `}\n                \n                    style={\n                      petHealth.verm2\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n              </div>\n            </DogInfo>\n            <ModalDate\n                modal={modal}\n                setModal={setModal}\n                URL={URL_DATE}\n                disabledRadio={disabledRadio}\n                setDisabledRadio={setDisabledRadio}\n              />\n          </div>\n        </Style>\n        <Footer />\n      </>\n    ) :  (\n    \n      <>\n        <Header />\n        <Style>\n          <div className=\"top\">\n            <h1>{pet.name}</h1>\n            <div className=\"img-box\">\n              <img src={logoCat} />\n            </div>\n          </div>\n          <div className=\"pet-info\">\n            <p>Breed: {pet.breed}</p>\n            <p>Birthday: {pet.birthdate}</p>\n            <p>Genre: {pet.genre}</p>\n            <DogInfo>\n              {\" \"}\n              <div className=\"health-box\">\n                Vacinas:\n                <div className=\"health\">\n                  <p>Quádrupla</p>\n                  <p>Data: {petHealth.quadrupla_date} </p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"quadrupla\");\n                    }}\n                    className={`radio-input `}\n                \n                    style={\n                      petHealth.quadrupla\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n                <div className=\"health\">\n                  <p>Antirábica</p>\n                  <p>Data: {petHealth.antirabica_date} </p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"antirabica\");\n                    }}\n                    className={`radio-input `}\n                \n                    style={\n                      petHealth.antirabica\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n              </div>\n              <ModalDate\n                modal={modal}\n                setModal={setModal}\n                URL={URL_DATE}\n                disabledRadio={disabledRadio}\n                setDisabledRadio={setDisabledRadio}\n              />\n              <div className=\"health-box\">\n                Vermífugo:\n                <div className=\"health\">\n                  <p>1° semestre</p>\n                  <p>{petHealth.verm1_date}</p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"verm1\");\n                    }}\n                    className={`radio-input `}\n                \n                    style={\n                      petHealth.verm1\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                  <p >2° semestre</p>\n                  <p>{petHealth.verm2_date}</p>\n                  <button\n                    onClick={() => {\n                      setModal(!modal);\n                      setVaccine(\"verm2\");\n                    }}\n                    className={`radio-input `}\n                \n                    style={\n                      petHealth.verm2\n                        ? { backgroundColor: \"#577ae4\" }\n                        : { backgroundColor: \"#fff\" }\n                    }\n                  ></button>\n                </div>\n              </div>\n            </DogInfo>\n          </div>\n        </Style>\n        <Footer />\n      </>\n    );\n  } else \n    return (\n      <>\n        <Header />\n        <Style> Loading</Style>\n        <Footer />\n      </>\n    );\n}\n\nconst Style = styled.div`\n  display: flex;\n  /* margin-top: 100px; */\n  flex-direction: column;\n  padding: 15% 20%;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  margin-top: 30px;\n  /* background-color: var(--darkcolor); */\n\n  .top {\n    width: 100%;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: absolute;\n    top: 80px;\n\n    img {\n      width: 100px;\n      height: 100px;\n      position: relative;\n    }\n  }\n\n  h1 {\n    font-family: \"Atma\", cursive;\n    font-size: 28px;\n    margin-bottom: 15px;\n  }\n  .pet-info {\n    background-color: var(--darkcolor);\n    border-radius: 30px;\n    padding: 3% 5%;\n    display: flex;\n    justify-content: start;\n    align-items: flex-start;\n    flex-direction: column;\n    width: 100%;\n    /* height: 100%; */\n  }\n  .pet-info p {\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    width: 100%;\n    margin: 10px 0;\n    color: #696969;\n    font-size: 18px;\n    border: 1px solid #aaa;\n    border-radius: 4.64px;\n    background-color: #fff;\n  }\n`;\n\nconst DogInfo = styled.div`\n  width: 100%;\n\n  .radio-input {\n    width: 18px;\n    height: 18px;\n    border: 4px solid #fff;\n    border-radius: 50%  ;\n    margin-right: 10px;\n    \n    background-color: #fff;\n  }\n  .marked {\n    background-color: blue;\n  }\n  label {\n    display: inline-flex;\n    align-items: center;\n  }\n  input {\n    width: 303px;\n    height: 38px;\n    background-color: brown;\n    margin: 0px 0;\n    color: #696969;\n    font-size: 18px;\n    border: 1px solid #aaa;\n    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\n    border-radius: 4.64px;\n  }\n  .health-box {\n    display: flex;\n    justify-content: center;\n    font-size: 18px;\n    flex-direction: column;\n \n    width: 100%;\n  }\n  .health {\n    display: flex;\n    /* flex-wrap: wrap; */\n    align-items: center;\n    font-size: 18px;\n    width: 100%;\n    justify-content: space-between;\n\n    /* flex-direct\n    ion: column; */\n  }\n  .health button {\n  }\n  .health p {\n    font-size: 15px;\n  }\n  p {\n    margin: 15px 0;\n    font-weight: 600;\n    display: flex;\n    align-items: center;\n    padding: 0 5px;\n    width: 40px;\n    height: 25px;\n    margin: 10px 0;\n    color: #696969;\n    font-size: 15px;\n    border: 1px solid #aaa;\n    /* box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25); */\n    border-radius: 4.64px;\n    background-color: #fff;\n  }\n`;\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/Context/UserContext.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalDelete.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Footer.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalTask.js",["132"],[],"import axios from \"axios\";\nimport { useContext, useState } from \"react\";\nimport Modal from \"react-modal\";\nimport {ModalStyle} from \"../styledComponents/ModalStyle\"\nimport { customStyles } from \"../styledComponents/ModalStyle\";\n\n\nexport default function ModalTask({ toggleModal, setToggleModal }) {\n  const [petTask, setPetTask] = useState(\"\");\n  const token = localStorage.getItem(\"token\")\n  const URL = `${process.env.REACT_APP_API_URL}/pet/task/add` \n\n  function sendTask() {\n    const body = { \n      description: petTask };\n    const config = {\n      headers: {\n          Authorization: `Bearer ${token}`,\n      },\n    }\n    axios\n      .post(URL, body, config)\n      .then((response) => {\n        console.log(response.data);\n        setToggleModal(false)\n      })\n      .catch((e) =>   setToggleModal(false)) \n    }\n   ;\n\n   function isModalOpen(){\n    setToggleModal(false)\n   }\n  \n   \n  return (\n    <Modal\n      isOpen={toggleModal}\n      onRequestClose={isModalOpen}\n      style={customStyles}\n    >\n      <ModalStyle>\n        <input\n          type=\"text\"\n          value={petTask}\n          onChange={(e) => setPetTask(e.target.value)}\n        ></input>\n        <div className=\"buttons\">\n          <button onClick={isModalOpen}>\n            <p id=\"decline\"> Cancel </p>\n          </button>\n          <button id=\"accept\" onClick={() => sendTask()}>\n            {\" \"}\n            <p>Ok </p>{\" \"}\n          </button>\n        </div>\n      </ModalStyle>\n    </Modal>\n  );\n}\n\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Header.js",["133"],[],"import styled from \"styled-components\";\nimport logo from \"../assets/imgs/pets-planner-unname.png\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Header() {\n  const navigate = useNavigate()\n  return (\n    <Top>\n      <div className=\"left\">\n        <img src={logo} />\n        <h1>Pets's Planner</h1>\n      </div>\n      <span className=\"rigth\" onClick={()=>navigate(\"/\")} >Logout</span>\n    </Top>\n  );\n}\n\nconst Top = styled.div`\n  width: 100%;\n  height: 80px;\n  position: fixed;\n  background-color: #fff;\n  top: 0;\n  z-index: 2;\n  box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.25);\n  display: flex;\n  padding: 30px;\n  align-items: center;\n  justify-content: space-between;\n  div {\n    display: flex;\n  }\n  span {\n    border: none;\n    background-color: var(--darkcolor);\n    height: 28px;\n    border-radius: 5px;\n    font-weight: 600;\n    cursor: pointer;\n    padding: 5px;\n  }\n  h1 {\n    font-family: \"Atma\", cursive;\n    font-size: 26px;\n    font-weight: 700;\n    line-height: 42.09px;\n    padding: 10px;\n  }\n  img {\n    width: 88px;\n    height: 59px;\n  }\n`;\n","/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/ModalDate.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/SubmmitButton.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/Inputs.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/Container.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/ToDoListStyle.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/styledComponents/ModalStyle.js",[],[],"/home/juliana/Documentos/Driven/Projetos/Projeto-autoral/Pets-planner-front/src/components/Loading.js",[],[],{"ruleId":"134","severity":1,"message":"135","line":9,"column":10,"nodeType":"136","messageId":"137","endLine":9,"endColumn":20},{"ruleId":"138","severity":1,"message":"139","line":35,"column":6,"nodeType":"140","endLine":35,"endColumn":11,"suggestions":"141"},{"ruleId":"134","severity":1,"message":"142","line":13,"column":11,"nodeType":"136","messageId":"137","endLine":13,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":52,"column":9,"nodeType":"145","endLine":52,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":46,"column":9,"nodeType":"145","endLine":46,"endColumn":27},{"ruleId":"134","severity":1,"message":"146","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":15},{"ruleId":"134","severity":1,"message":"147","line":17,"column":17,"nodeType":"136","messageId":"137","endLine":17,"endColumn":26},{"ruleId":"134","severity":1,"message":"148","line":18,"column":17,"nodeType":"136","messageId":"137","endLine":18,"endColumn":26},{"ruleId":"134","severity":1,"message":"149","line":20,"column":10,"nodeType":"136","messageId":"137","endLine":20,"endColumn":18},{"ruleId":"134","severity":1,"message":"142","line":18,"column":11,"nodeType":"136","messageId":"137","endLine":18,"endColumn":15},{"ruleId":"134","severity":1,"message":"150","line":18,"column":17,"nodeType":"136","messageId":"137","endLine":18,"endColumn":24},{"ruleId":"134","severity":1,"message":"151","line":20,"column":17,"nodeType":"136","messageId":"137","endLine":20,"endColumn":26},{"ruleId":"138","severity":1,"message":"152","line":42,"column":6,"nodeType":"140","endLine":42,"endColumn":32,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":44,"column":6,"nodeType":"140","endLine":44,"endColumn":21,"suggestions":"155"},{"ruleId":"156","severity":1,"message":"157","line":57,"column":36,"nodeType":"158","messageId":"159","endLine":57,"endColumn":38},{"ruleId":"156","severity":1,"message":"157","line":61,"column":36,"nodeType":"158","messageId":"159","endLine":61,"endColumn":38},{"ruleId":"143","severity":1,"message":"144","line":74,"column":15,"nodeType":"145","endLine":74,"endColumn":36},{"ruleId":"143","severity":1,"message":"144","line":194,"column":15,"nodeType":"145","endLine":194,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":10,"column":9,"nodeType":"145","endLine":10,"endColumn":27},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'URL_GET' and 'config'. Either include them or remove the dependency array.","ArrayExpression",["160"],"'user' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Loading' is defined but never used.","'setInput1' is assigned a value but never used.","'setInput2' is assigned a value but never used.","'disabled' is assigned a value but never used.","'setUSer' is assigned a value but never used.","'setFilled' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'URL' and 'config'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'URL'. Either include it or remove the dependency array.",["162"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [URL_GET, config, del]",{"range":"169","text":"170"},"Update the dependencies array to be: [toggleModal, del, marked, URL, config]",{"range":"171","text":"172"},"Update the dependencies array to be: [URL, disabledRadio]",{"range":"173","text":"174"},[1004,1009],"[URL_GET, config, del]",[1332,1358],"[toggleModal, del, marked, URL, config]",[1407,1422],"[URL, disabledRadio]"]